{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notifications.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","handleFilter","value","onChange","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Persons","person","deletePerson","name","number","onClick","Notification","message","classN","className","baseUrl","request","axios","get","nonExistingTestCase","id","phone","then","response","data","concat","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","notificationMessage","setNotificationMessage","setClassName","useEffect","console","log","personService","initalsPersons","notification","setTimeout","event","target","preventDefault","some","toLowerCase","window","confirm","find","p","personUpdated","returnedPerson","map","catch","error","personObject","sort","person1","person2","localeCompare","match","key","personDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dffb6f9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilter}) => {\r\n    return (\r\n        <div>\r\n        filter shown with\r\n        <input \r\n          value={filter}\r\n          onChange={handleFilter}\r\n        />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          name: \r\n          <input \r\n            value={newName}\r\n            onChange={handleNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number:\r\n          <input \r\n            value={newNumber}\r\n            onChange={handleNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\n\r\nconst Persons = ({person, deletePerson}) => {\r\n    return (\r\n        <div>\r\n          <p>{person.name} {person.number}\r\n          <button onClick={deletePerson}>delete</button></p>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react';\r\n\r\nconst Notification = ({ message, classN}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={classN}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  const nonExistingTestCase = {\r\n    id: 2000000,\r\n    name: \"This person is not on server\",\r\n    phone: \"10 -101919101901\",\r\n  }\r\n  return request.then(response => response.data.concat(nonExistingTestCase))\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(`${baseUrl}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update , remove}","import React, { useState, useEffect } from 'react'\nimport './index.css'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from'./components/Notifications'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [filter, setFilter ] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [className, setClassName] = useState('')\n\n  useEffect(() => {\n    console.log('effect')\n    personService.getAll().then(initalsPersons => {\n      setPersons(initalsPersons)\n    })\n  },[])\n\n  const notification = (message, classN) => {\n    setClassName(classN)\n    console.log('tänne päästiin')\n    setNotificationMessage(message)\n    setTimeout(() => {setNotificationMessage(null)},5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log('submit clicked ', event.target)\n    \n    if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase())) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const person =  persons.find(p => p.name.toLowerCase() === newName.toLowerCase())\n        const personUpdated = { ...person, number:  newNumber}\n        \n        personService.update(personUpdated.id, personUpdated).then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== personUpdated.id ? person : returnedPerson))\n        notification(`updated ${personUpdated.name} phone number`, 'notification')\n        })\n        .catch(error => {\n          notification(`the person ${personUpdated.name} was already deleted from server`, 'error')\n          setPersons(persons.filter(p => p.id !== personUpdated.id))\n        })\n      } else return\n      \n      setNewName('')\n      setNewNumber('')\n      return\n    }\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService.create(personObject).then(returnedPerson => {\n      setPersons(persons.concat(returnedPerson))\n      setNewName('')\n      setNewNumber('')\n    })\n    notification(`added ${personObject.name}`, 'notification')\n  }\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value) \n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  // if no filtering then shows all numbers, otherwise can look up names by first or last name /hence\n  // showing in alphabetical order by first name\n  const personsToShow = () => {\n    if (filter === '')  return persons.sort((person1, person2) => person1.name.localeCompare(person2.name))\n    return  (persons.filter(person => person.name.toLowerCase().match((`^${filter.toLowerCase()}| ${filter.toLowerCase()}`))))\n  }\n  \n  const deletePerson = (id) => {\n    console.log(`delete person: ${id}`)\n    const personDelete = persons.find(p => p.id === id)\n    if (!window.confirm(`Delete ${personDelete.name} ?`)) {console.log(\"pushed cancel\"); return}\n    personService.remove(personDelete.id).then(response =>\n      {\n        console.log(response.data)\n        setPersons(persons.filter(p => p.id !== id))\n    })\n    .catch(error => {\n      notification(`the person ${personDelete.name} was already deleted from server`, 'error')\n      setPersons(persons.filter(p => p.id !== personDelete.id))\n    })\n    notification(`person ${personDelete.name} was deleted`, 'notification')\n  }  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} classN={className} />\n      <Filter filter={filter} handleFilter={handleFilter} />\n      <h3>Add a new</h3>\n      <PersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      {personsToShow().map((person) =>\n        <Persons key={person.name} person={person} deletePerson={() => deletePerson(person.id)} /> )}\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}